.button {
  @include focus-ring;
  background-color: $color-eggplant;
  border: none;
  border-radius: $border-radius-base;
  color: $color-white;
  cursor: pointer;
  display: inline-block;
  font-size: 0.8rem;
  font-family: $font-family-sans-serif-medium;
  padding: $spacing-4 $spacing-5;
  text-align: center;
  text-decoration: none;
  transition: background-color $duration-2 $timing-ease;

  &__content {
    position: relative;

    .loading & {
      // This ensures that the button stays the same size but the text can't be seen
      color: transparent;
      -webkit-user-select: none; /* Chrome/Safari */        
      -moz-user-select: none; /* Firefox */
      -ms-user-select: none; /* IE10+ */
      user-select: none; /* IE10+ */

      &::after {
        animation: spin 1s linear infinite;
        border: $border-width-sm $border-style $color-white;
        border-top-color: transparent !important;
        border-radius: 50%;
        content: '';
        display: block;
        @include size(20px);
        @include absolute-center(20px);
      }
    }

    // Gnarly hack to force visual text alignment within a button.
    &::before {
      content: '';
      display: block;
      margin-top: $spacing-1;
    }
  }

  &:hover {
    background-color: darken($color-eggplant, 3%);
    text-decoration: none;
  }

  &--small {
    font-size: $font-size-xs;
    padding: $spacing-3 $spacing-5;
  }

  &--large,
  &--large-inverted {
    display: block;
    font-size: $root-font-size;
    font-weight: 700;
    letter-spacing: 0.01rem;
    padding: $spacing-5 $spacing-6;
    width: 100%;

    .loading & {
      .button__content {
        &::after {
          border-width: $border-width-xl;
          @include size(30px);
          @include absolute-center(30px);
        }
      }
    }
  }

  &--large-inverted {
    @media screen and (min-width: map-get($breakpoints, 'breakpoint-3')) {
      display: inline-block;
      width: auto;
    }

    background: $color-white;
    color: var(--color-button-large-text);

    .loading & {
      .button__content {
        &::after {
          border-color: var(--color-button-large-text);
        }
      }
    }

    &:hover {
      background: $color-silk;
    }
  }

  &--analysis {
    background-color: $color-luckypoint;
    display: block;
    margin: $spacing-6 auto 0;
    width: fit-content;

    &:hover {
      background: darken($color-luckypoint, 3%);
    }
  }
}

@keyframes spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}